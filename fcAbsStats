
////////////////////////////////////////////////////////////////////////////////////////////////
//               Загадка: "Буратино дали пять яблок, а потом отняли три.
//               Сколько яблок осталось у Буратино? "
//               -Думаете два ?!... А кто знает сколько яблок было у Буратино?
//               Мораль: обнуляйте переменные.
////////////////////////////////////////////////////////////////////////////////////////////////
FOR #i := 0 TO #l_cMaxChannels-1 DO
    #t_D[#i, 0] := #i_D[#i];
    #t_D[#i, 1] := 0;
    #t_D[#i, 2] := 16#7fffffff;             //  заполняем самым большИм на свете, положительтным числом. По сути это разница приближения позиции механизма
    //  к координате магнита в базе. Стало быть по умолчанию (до расчета) она самая большая
    #t_D[#i, 3] := -1;                      //  а это поинтер на реперный элемент в массиве. По дефолту он на несуществующий элемент
END_FOR;
#t_iDs2 := 0;
#t_diDp := 16#7fffffff ;
#t_diDp_tmp := 16#7fffffff;
IF "fcGetCurrError_1"(16#1F) THEN             // это ошибки №1-5 от виртуал БТЛ нет магнитов под датчиком
    RETURN;                                 // статистику собирать в таком случае смысла нет
END_IF;                                     //выход из функции
////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
//            Определение начала и конца массива магнитов
//            в зависимости от направления скорости
////////////////////////////////////////////////////////////////
IF #i_iPsyQuantity = #i_iQd THEN
    #t_iH2 := #i_iQd - 1;
    #t_iH1 := 0;
ELSE
    #t_iH1 := #i_iPsyStart;
    IF #i_iPsyEnd > 0 THEN
        #t_iH2 := #i_iPsyEnd - 1;
    ELSE
        #t_iH2 := 0;
    END_IF;
END_IF;

#i := 0;
WHILE "dbMagnets_1".magnet[#i] <> #gc_diNULL DO                                                                              // 
    IF ABS(ABS("dbMagnets_1".magnet[#i + 1] - "dbMagnets_1".magnet[#i]) - #t_D[#t_iH2,0]) <= "dbParameters_1".Config.diGamma THEN                   //  сравнение с нолевой дельтой
        #j := 0;                                                                                                            //  подходит - значит считаем Ds
        WHILE ABS(ABS("dbMagnets_1".magnet[#i + #j + 1] - "dbMagnets_1".magnet[#i + #j]) - #t_D[#t_iH2 - #j, 0]) <=  "dbParameters_1".Config.diGamma DO  //  дельта [указатель +1]-[указатель] в базе и под датчиком по модулю не больше погрешности
            #t_D[#t_iH2 - #j, 1] := #t_D[#t_iH2 - #j, 1] + 1;
                #t_diDp_tmp := ABS((#i_diPosition - (#i_diAL / 2)) - (("dbMagnets_1".magnet[#i] + "dbMagnets_1".magnet[#i + 1+#j]) / 2));
                #t_iPsyPointer := #i+#j+1;
            IF #j = #i_iQd - 1 THEN     
                #t_iDs2 += 1;
            END_IF;
            IF ABS((#i_diPosition - (#i_diAL / 2)) - "dbMagnets_1".magnet[#i + #j]) < ABS(#t_D[#t_iH2 - #j, 2]) THEN                  //  если координата найденной дельты меньше расстояния от позиции серидины датчика до нее
                #t_D[#t_iH2 - #j, 2] := ABS((#i_diPosition - (#i_diAL / 2)) - ("dbMagnets_1".magnet[#i + #j] + (#t_D[#t_iH2 - #j, 0]) / 2));     //  и расстояния от позиции серидины датчика до найденной ранее
                #t_D[#t_iH2 - #j, 3] := #i + #j + 1;
            END_IF;
            IF #t_diDp_tmp < #t_diDp THEN
                #t_diDp := #t_diDp_tmp;
                #t_iDpPointer := #i+#j+1;
            END_IF;
            #j += 1;
            IF (#t_iH2 - #j) < 0 THEN  
                 EXIT;
            END_IF;       //чтобы не запросить [-1]
        END_WHILE;
     END_IF;
     #i += 1;
END_WHILE;

//про равномерную разметку: сформировать указатель на M с наименьшим приближением, затем
//запускать цикл while по магнитам (m), прибавляя их к найденной координате (M), пока не встретим
//подходящий (сумма будет отличаться от тек позиции не менее чем Dnull/2). Найденный i-тый магнит записываем в MagPointer

#t_iMagPointer := #i_iPsyStart;           // А вот магнит, образующий позицию, в таком случае будет на хвосте датчика - последний
#t_iWsPointer := #t_D[#t_iH1, 3];       // указатель на последний найденную дельту, которая имела вхождения

//     //Ds - количество полных повторений дельт под датчиком дельтам в базе
IF #i_iQd <> #i_iPsyQuantity THEN
    #t_diDs := 0;
ELSE
    #t_diDs := #t_iDs2;
END_IF;
#t_iPsyPointer := #t_iPsyPointer;

//Ws - количество повторений последней встречающейся в базе дельты
#t_diWs := #t_D[#t_iH1, 1];
#o_diDp := #t_diDp;
#t_diDp_tmp := #t_diDp_tmp;

//Запись выходных переменных из временных (тЭмповых)
#o_diDs := #t_diDs;
#o_diWs := #t_diWs;
#o_iPointer := #t_iWsPointer;
#o_iDpPointer := #t_iDpPointer;
#o_iMagPointer := #t_iMagPointer;
#D := #t_D;
