                  ////////////////////////////////////////////////////////////////
IF "dbParameters_1".Config.Filter.DB THEN
    // Фильтрация для всех
    #t_adiMagnets := #i_diMagnets_Filtr;
ELSE    // Фильтруем только для статистики
    #t_adiMagnets := #i_diMagnets;
END_IF;

#t_xPosOk := false;
// выход из обработки при движении магнитов под датчиком
IF "dbParameters_1".Config.diGamma  < "dbVisu_1".rSigma THEN
    RETURN;
END_IF;

IF "fcGetCurrError_1"(16#17) AND NOT #i_xlInitialize THEN
    #s_diStatPosition := #gc_diNULL;
    #o_diPosition := #gc_diNULL;
    #t_diPosition := #gc_diNULL;
    #t_xInsert := FALSE;                        // НЕ ВСТАВЛЯТЬ
    RETURN;
END_IF;


////////////////////////////////////////////////////////////////
//            Сбор статистики
////////////////////////////////////////////////////////////////

"fcAbsStats_1"(i_diPosition := #s_diStatPosition,
               i_diAL := #AL,
               i_diDNull := #gc_diDeltaNull,
               gc_diNULL := #gc_diNULL,
               i_DbCapacity := #gc_iDbCapacity,
               i_iPsyStart := #i_iPsyStart,
               i_iPsyEnd := #i_iPsiEnd,
               i_iPsyQuantity := #i_iPsiQuantity,
               i_iQd := #i_iQd,
               i_D := #i_diDelts,
               l_cMaxChannels := #gc_iMaxChanels,
               D => #t_D,
               o_diDs => #Ds,
               o_diWs => #Ws,
               o_iPointer => #t_iPointer,
               o_iDpPointer => #t_iDpPointer,
               o_iMagPointer => #t_iMagPointer,
               o_diDp=>#t_diDp);

////////////////////////////////////////////////////////////////
//            Процедура по принятию решений
////////////////////////////////////////////////////////////////

#s_xEncoder := #o_xEncoder;  // по умолчанию енкодер выключен
#t_xInsert := FALSE;

// проверки при просыпании
IF #i_xFirstScan THEN
    IF "fcGetCurrError_1"(16#8) OR #i_diMagnets[1] < 0 OR #s_xEncoder THEN
        #s_xEncoder := FALSE;
        #t_diPosition := #gc_diNULL;
        "dbVisu_1".dwCurrError := "dbVisu_1".dwCurrError;
    END_IF;
    IF #Ds = 0 AND #Ws = 0 THEN
        // "fcSetError"(i_dwErrorNo := 16#40);                 // ошибка №7 -  Нет соответствий в базе
        // TODO УЗНАТЬ на первом скане с одним магнитом под датчиком КАКАЯ ДОЛЖНА БЫТЬ ОШИБКА ????!!!
        #t_diPosition := #gc_diNULL;
    END_IF;
END_IF;

CASE #Ds OF
    0:      // Ds=0   полного совпадения дельт под датчиком в БД не найдено
        CASE #Ws OF
            0:      //  Ws=0    и даже в массиве пересечений ОМЕГА не найдено ничего
                IF "dbMagnets_1".magnet[1] <> #gc_diNULL AND NOT #i_xlInitialize THEN    // если в базе уже что-то есть , то
                    #t_xInsert := FALSE;                        // НЕ ВСТАВЛЯТЬ
                    #s_xEncoder := FALSE;
                    IF "fcGetCurrError_1"(16#7) OR (#t_adiMagnets[1] < 0 AND #i_xFirstScan) THEN      // это ошибки №1-3 от виртуал БТЛ нет магнитов под датчиком
                        #t_diPosition := #gc_diNULL;            // ГНУЛ
                    ELSIF #t_diPosition <> #gc_diNULL AND NOT(#i_xFirstScan OR #i_xlInitialize) THEN
                        #s_xEncoder := TRUE;// а так по энкодеру спокойно едем
                        #t_diPosition := "fcEncoderPos_1"(i_diEncoder_disp := #i_diEncoderDisp, i_diPosition := #t_diPosition, gc_GNull := #gc_diNULL);
                        IF NOT "fcGetCurrError_1"(16#1f) AND #i_iQd = #i_iPsiQuantity THEN              // Если нет ошибки от Virt BTL (один магнит под в вирт зоне)
                            "fcSetError_1"(i_dwErrorNo := 16#40);         // ошибка №7 -  Нет соответствий в базе
                        END_IF;
                    ELSE
                        #t_diPosition := #gc_diNULL;
                        IF #t_adiMagnets[1] > 0 AND NOT #i_xFirstScan AND #i_iQd = #i_iPsiQuantity THEN // AND "fcGetCurrError"(16#1F)
                            "fcSetError_1"(i_dwErrorNo := 16#40);         // ошибка №7 -  Нет соответствий в базе
                        END_IF;
                    END_IF;
                ELSE    // это первая пара увиденных магнита
                    IF ( #t_adiMagnets[1] > 0 AND (#i_xFirstScan OR #i_xlInitialize))  THEN
                        #t_diPosition := #i_diInitialPosition;  // позиция начала отсчета ставится в константах этого блока ↑там↑
                        #t_xInsert := TRUE;     //  ВСТАВИТЬ!
                        #o_iPosPointer := 0;    //  начинаем вставлять с нулевого магнита
                        #t_iMagPointer := 0;    //  в базе и под датчиком
                        #s_xEncoder := false;
                    ELSIF NOT "fcGetCurrError_1"(16#1f) THEN
                        "fcSetError_1"(i_dwErrorNo := 16#40);         // ошибка №7 -  Нет соответствий в базе
                    END_IF;
                END_IF;
            1:      //Ws = 1 найдено единственное пересечение массивов
                IF (#t_diPosition <> #gc_diNULL) THEN
                    IF ABS(("dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer]) - #s_diStatPosition) < (#gc_diDeltaNull / 2) OR #i_xBlockDb THEN       //  проверка на телепорт (вдруг найденное пересечение отправляет в другой конец цеха)
                        IF #s_xEncoder THEN
                            #t_diPosition := "fcEncoderPos_1"(i_diEncoder_disp := #i_diEncoderDisp, i_diPosition := #t_diPosition, gc_GNull := #gc_diNULL);           //  
                            #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
                        ELSE
                            #t_diPosition := "dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer];
                            #o_iPosPointer := #t_iPointer;
                            #t_xInsert := TRUE;    //  Ws=1    0найдено одно соответствие - новый магнит - вставляем
                            IF ABS(#t_diPosition - ("dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer])) < (#gc_diDeltaNull / 2) THEN     //  текущвя пара #t_iPointer + #t_iMagPointer из абсстата дают текущую позицию
                                 #s_iStatPointer := #t_iPointer;            //  сохраняем поинтер
                             END_IF;
                        END_IF;
                    ELSE        //  телепорт
                        "fcSetError_1"(i_dwErrorNo := 16#100);         // ошибка №9 - телепортация
                        #s_xEncoder := TRUE;        //  едем по энкодеру и
                        #t_xInsert := FALSE;        //  НЕ ВСТАВЛЯТЬ
                        #t_diPosition := "fcEncoderPos_1"(i_diEncoder_disp := #i_diEncoderDisp, i_diPosition := #t_diPosition, gc_GNull := #gc_diNULL);   
                    END_IF;
                END_IF;
            ELSE    // Ws - 2 и более   Примечание! В такую ситуацию можно попасть только проехав через Ds >= 2.
                IF (#t_diPosition <> #gc_diNULL) THEN
                    IF ABS(("dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer]) - #s_diStatPosition) < (#gc_diDeltaNull / 2) THEN
                        #t_diPosition := "dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer];
                        #o_iPosPointer := #t_iPointer;
                        #s_xEncoder := FALSE;
                        #t_xInsert := TRUE;     // ВСТАВИТЬ!
                        #s_iStatPointer := #t_iPointer;
                    ELSE
                        "fcCheckPos_1"(i_diStatPosition := #s_diStatPosition,        //  проверка по StatPointer
                                     i_adiMagnets := #i_diMagnets,                 //  нужен для езды по фанотомам
                                     i_iQd := #i_iQd,
                                     i_iPointer := #s_iStatPointer,
                                     i_iMagPointer := #t_iMagPointer,
                                     gc_diDeltaNull := #gc_diDeltaNull,
                                     Ok => #t_xPosOk,
                                     o_iMagPointer => #i);
                        IF #t_xPosOk THEN
                            #t_diPosition := "dbMagnets_1".magnet[#s_iStatPointer] + #t_adiMagnets[#i];
                            #t_iMagPointer := #i;
                            #o_iPosPointer := #s_iStatPointer;
                            #s_xEncoder := FALSE;
                            #t_xInsert := TRUE;     // ВСТАВИТЬ!
                        ELSE
                            "fcCheckPos_1"(i_diStatPosition := #s_diStatPosition,        //  проверка по DpPointer
                                         i_adiMagnets := #i_diMagnets,                 //  нужен для езды по равномерной разметке
                                         i_iQd := #i_iQd,
                                         i_iPointer := #t_iDpPointer,
                                         i_iMagPointer := #t_iMagPointer,
                                         gc_diDeltaNull := #gc_diDeltaNull,
                                         Ok => #t_xPosOk,
                                         o_iMagPointer => #i);
                            IF #t_xPosOk THEN
                                #t_diPosition := "dbMagnets_1".magnet[#t_iDpPointer] + #t_adiMagnets[#i];
                                #t_iMagPointer := #i;
                                #o_iPosPointer := #t_iDpPointer;
                                #s_xEncoder := FALSE;
                                #t_xInsert := TRUE;     // ВСТАВИТЬ!
                            END_IF;
                        END_IF;
                        IF NOT #t_xPosOk THEN
                            "fcSetError_1"(i_dwErrorNo := 16#80);         // ошибка №8 - дубликат 
                            #s_xEncoder := TRUE;
                            #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
                            #t_diPosition := "fcEncoderPos_1"(i_diEncoder_disp := #i_diEncoderDisp, i_diPosition := #t_diPosition, gc_GNull := #gc_diNULL);
                        END_IF;
                    END_IF;
                END_IF;
        END_CASE; // case of Ws
    1:      // Ds=1     найдено одно соответствие дельт под датчикам дельтам в массиве
        IF (#t_diDp < (#AL / 2) OR (#t_diPosition = #gc_diNULL))  THEN   // OR #i_xFirstScan сравнение текущего положения с положением найденной дельтой 
            #o_iPosPointer := #t_iPointer;
            IF ABS(("dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer]) - #s_diStatPosition) < (#gc_diDeltaNull / 2) OR (#t_diPosition = #gc_diNULL) THEN
                #t_diPosition := "dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer];
                #s_xEncoder := false;
                #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
                #s_iStatPointer := #t_iPointer;
            ELSE
                #s_xEncoder := TRUE;        // иначе по энкодеру
                #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
                #t_diPosition := "fcEncoderPos_1"(i_diEncoder_disp := #i_diEncoderDisp, i_diPosition := #t_diPosition, gc_GNull := #gc_diNULL);
                "fcSetError_1"(i_dwErrorNo := 16#1C0);             // ошибка №7+8+9 - дубликат, не занесенный в базу
            END_IF;
        ELSE        // ситуация, когда данная комбинация дельт могнитов встречается в базе, но не в этом месте
                    // ситуация при полном дубликате под датчиком на неверной координате никак не отслеживается статистикой            
            "fcSetError_1"(i_dwErrorNo := 16#100);         // ошибка №9 - телепортация
            IF #i_xFirstScan THEN
                #t_diPosition := #gc_diNULL;
                #s_xEncoder := FALSE;        // не по энкодеру
                #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
            END_IF;
            IF NOT #s_xEncoder THEN // если нашли реперную дельту не по энкодеру 
                #o_iPosPointer := #t_iPointer;
            ELSIF (#t_diPosition <> #gc_diNULL) THEN //не гнул
                 #s_xEncoder := TRUE;        // тогда по энкодеру
                 #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
                 #t_diPosition := "fcEncoderPos_1"(i_diEncoder_disp := #i_diEncoderDisp, i_diPosition := #t_diPosition, gc_GNull := #gc_diNULL);
             ELSE
                 #t_diPosition := #gc_diNULL;
                 #s_xEncoder := FALSE;        // не по энкодеру
                 #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
            END_IF;
        END_IF;
        #s_diDoubleDisp := 0;      // сброс значения пройденного по дубликату
    ELSE    // Ds - 2 и более соотвествий (дубликаты)
        #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
        "fcSetError_1"(i_dwErrorNo := 16#80);             // ошибка №8 - дубликат  
        IF NOT #i_xFirstScan AND (#t_diPosition <> #gc_diNULL) THEN
            #s_diDoubleDisp := #s_diDoubleDisp + #i_diEncoderDisp;  // приращение переменной пройденной по дубликату, чтобы не скакануть на сдвинутую метку
            IF ABS(#t_diPosition - ("dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer])) < (#gc_diDeltaNull / 2) THEN
                #s_iStatPointer := #t_iPointer;
            END_IF;
            IF ABS(("dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer]) - #s_diStatPosition) < (#gc_diDeltaNull / 2) THEN
                #t_diPosition := "dbMagnets_1".magnet[#t_iPointer] + #t_adiMagnets[#t_iMagPointer];
                #o_iPosPointer := #t_iPointer;
                #s_xEncoder := FALSE;
                #t_xPosOk := TRUE;
            ELSE
                "fcCheckPos_1"(i_diStatPosition := #s_diStatPosition,        //  проверка по StatPointer
                             i_adiMagnets := #i_diMagnets,                 //  нужен для езды по фанотомам
                             i_iQd := #i_iQd,
                             i_iPointer := #s_iStatPointer,
                             i_iMagPointer := #t_iMagPointer,
                             gc_diDeltaNull := #gc_diDeltaNull,
                             Ok => #t_xPosOk,
                             o_iMagPointer => #i);
                IF #t_xPosOk THEN
                    #t_diPosition := "dbMagnets_1".magnet[#s_iStatPointer] + #t_adiMagnets[#i];
                    #t_iMagPointer := #i;
                    #o_iPosPointer := #s_iStatPointer;
                    #s_xEncoder := FALSE;
                    IF #t_iMagPointer > 0 THEN
                        #t_xInsert := TRUE;     // ВСТАВИТЬ!
                    END_IF;
                ELSE
                    "fcCheckPos_1"(i_diStatPosition := #s_diStatPosition,        //  проверка по DpPointer
                                 i_adiMagnets := #i_diMagnets,                 //  нужен для езды по равномерной разметке
                                 i_iQd := #i_iQd,
                                 i_iPointer := #t_iDpPointer,
                                 i_iMagPointer := #t_iMagPointer,
                                 gc_diDeltaNull := #gc_diDeltaNull,
                                 Ok => #t_xPosOk,
                                 o_iMagPointer => #i);
                    IF #t_xPosOk THEN
                        #t_diPosition := "dbMagnets_1".magnet[#t_iDpPointer] + #t_adiMagnets[#i];
                        #t_iMagPointer := #i;
                        #o_iPosPointer := #t_iDpPointer;
                        #s_xEncoder := FALSE;
                    END_IF;
                END_IF;
            END_IF;
            IF NOT #t_xPosOk THEN
                #s_xEncoder := TRUE;
                #t_diPosition := "fcEncoderPos_1"(i_diEncoder_disp := #i_diEncoderDisp, i_diPosition := #t_diPosition, gc_GNull := #gc_diNULL);
            END_IF;
        ELSIF #t_diPosition <> #gc_diNULL THEN //а не гнул ли он?
            #s_xEncoder := TRUE;
            #t_diPosition := "fcEncoderPos_1"(i_diEncoder_disp := #i_diEncoderDisp, i_diPosition := #t_diPosition, gc_GNull := #gc_diNULL);
        ELSE
            #s_xEncoder := FALSE;
            #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
        END_IF;
        IF #i_xFirstScan THEN
            "fcSetError_1"(i_dwErrorNo := 16#80);             // ошибка №8 - дубликат  
            #t_diPosition := #gc_diNULL;                    // ГНУЛ
            #t_xInsert := FALSE;        // НЕ ВСТАВЛЯТЬ
        END_IF;
END_CASE;



// команда на инсерт ставится при отсутствии флага блокировки массива
#t_xInsert := ((#t_xInsert AND NOT "fcGetCurrError_1"(16#1f)) OR #i_xlInitialize) & NOT #i_xBlockDb ;
IF #i_xlInitialize THEN
    #o_iPosPointer := 0;
    #t_diPosition := #i_diInitialPosition;
    IF "fcGetCurrError_1"(16#8) THEN
        #t_diPosition := #gc_diNULL;
    END_IF;
END_IF;

IF (#t_diPosition <> #gc_diNULL) OR (#t_diPosition = #i_diInitialPosition AND #t_adiMagnets[1] > 0) AND NOT #i_xFirstScan THEN
       #s_diStatPosition := #t_diPosition;                //  сохраняем позицию для сбора статистики следующим циклом
END_IF;

// запись выходных переменных из временного хранилища.
#o_xEncoder := #s_xEncoder;
#s_D := #t_D;
#o_iMagPointer := #t_iMagPointer;
#o_diPosition := #t_diPosition;


////////////////////////////////////////////////////////////////
//            Функция обработки записи массива
////////////////////////////////////////////////////////////////
IF #t_xInsert  THEN
    // Вызов ф-ции вставки в БД
    "fcDBControl_1"(gc_iMaxChanels:=#gc_iMaxChanels,
                  gc_diGNull:=#gc_diNULL,
                  gc_iNumDB:="dbParameters_1".Constant.iNumDB,
                  gc_iMaxCountInDB:=#gc_iDbCapacity,
                  i_diPosition:=#o_diPosition,
                  i_iQd:=#i_iQd,
                  i_iPosPointer:=#o_iPosPointer,
                  i_iMagPointer:=#o_iMagPointer,
                  i_xDelAll:=#i_xlInitialize,
                  i_adiMagnets:=#t_adiMagnets,
                  i_adiDelts:=#i_diDelts,
                  o_iQuantity=>"dbVisu_1".iQuantity);
END_IF;

IF #i_xFirstScan THEN
    ////////////////////////////////////////////////////////////////
    //             подсчет количества магнитов (записей в БД)
    ////////////////////////////////////////////////////////////////
    #t_iQuantity := 0;
    #t_iH1 := 0;                   // l
    #t_iT1 := #gc_iDbCapacity + 1;    // r
    WHILE (#t_iT1 - #t_iH1) > 1 DO
        #i := (#t_iT1 + #t_iH1) / 2;
        #t_diD1 := PEEK_DWORD(area := 16#84,            // считывание в D1
                              dbNumber := #gc_iNumDB,
                              byteOffset := (#i * 4));
        IF #t_diD1 = #gc_diNULL
        THEN
            #t_iT1 := #i;
        ELSE
            #t_iH1 := #i;
        END_IF;
    END_WHILE;
    IF #t_iT1 < #gc_iDbCapacity + 1 THEN
        IF #t_iT1 <> 1 THEN
            #t_iQuantity := #t_iT1;
        ELSE
            #t_iQuantity := 0;
        END_IF;
    END_IF;
    #t_iQuantity := "dbVisu_1".iQuantity;
END_IF;
////////////////////////////////////////////////////////////////
//            Запись БД для СКАДы
////////////////////////////////////////////////////////////////

"dbVisu_1".diDs := #Ds;
"dbVisu_1".diWs := #Ws;
"dbVisu_1".iPosPointer := #o_iPosPointer;


